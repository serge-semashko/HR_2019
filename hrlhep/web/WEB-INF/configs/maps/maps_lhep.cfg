[comments]
[end]

[description]
[end]
[parameters]
    LOG=ON
[end]

[init map]
    <script>
        var mbUrl ='https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';
        var mymap = L.map('mapid').setView([56.75859, 37.218719], 15);
        L.tileLayer(mbUrl,
            {
            maxZoom: 22,
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
                '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            id: 'mapbox/streets-v11'
        }).addTo(mymap);
    </script>

[end]
[get layers]
[end]
[init layers]
    
    $GET_DATA SQL:select CONCAT("'", NAME, "':'",descr,"',") as lrs  from map_layers order by descr;
    $SET_PARAMETERS lay={#lrs#}
    $LOG2 #lay# <br>
    <br>LRS #lay# <br>
    <script>
        console.log('begin');
    </script>
    <script>
        var lrs = #lay#;
        console.log('begin'+lrs);
    </script>
    <script>
        var lrs = #lay#;
        var overlays = {};
        var layers = {}
        var corps = {}

        for (el in lrs) {
          if (el.length==0)   break;
            console.log('layer:'+el);
            console.log(JSON.stringify(lrs[el]));

            var lr=L.layerGroup();
            overlays[lrs[el]] = lr;
            layers[el]=lr;
        }
        corps = layers['lhep_bulding'];
        var acc = layers['nica'];
//        alert(JSON.stringify(overlays));

        L.control.layers({},overlays).addTo(mymap);
    </script>
[end]
[get roads]
    select CONCAT("'", obj_name, 
        "':{'descr':'",descr,
        "','obj_name':'",obj_name,
        "','points':'",points,
        "'},") as roads  from map_lhep where o_type=1 order by descr
[end]
[init roads]
    $GET_DATA [get roads]
    $SET_PARAMETERS roads={#roads#}
    $LOG2 roads #roads# <br>
    $BREAK ??!roads

   <br> init roads '#roads#' <br>

    <script>
//        debugger;
        function obj_click(a){
            alert(a);
            debugger;
            return 'aaa';
        }
        var roads = #roads#;
        var overlays = {};
        for (el in roads) {
            if (el.length==0)   break;
            console.log('road el = '+el);
            var road = roads[el];
            console.log('begin el'+JSON.stringify(road));
            var lr=L.layerGroup();
            var descr  = road['descr'];
            var rname  = 'Аллея '+road['obj_name'];
            console.log('road descr'+rname);
            overlays[rname] = lr;
            var latlngs = JSON.parse(road['points']);
            var polyline = L.polyline(
                latlngs
            , {color: '#e4b477', weight:6}).addTo(lr);
            polyline.bindPopup(rname).on;
            console.log('Create line ID= '+polyline._leaflet_id);
           polyline.editing.enable();
            polyline.on('edit', function() {

		console.log('ID= '+this._leaflet_id);
		});

//            L.popup()
//                .setLatLng([56.75982559769803,37.21604154882547])
//                .setContent(obj_click(L))
//                .openOn(mymap);
            lr.addTo(mymap);
            polyline.on(
                 'click',
                 function(e) {
                    console.log('click '+alert(this._leaflet_id));
                   L.DomEvent.stopPropagation(e);
                 });

        }

        L.control.layers({},overlays).addTo(mymap);
    </script>
    
[end]


[get buildings]
    select CONCAT("'", obj_name, 
        "':{'descr':'",descr,
        "','obj_name':'",obj_name,
        "','points':'",points,
        "'},") as buildings  from map_lhep where o_type=2 order by descr
[end]
[init buildings]
    $GET_DATA [get buildings]
    $SET_PARAMETERS buildings={#buildings#}
    $LOG2 buildings #buildings# <br>
   <br> init buildings '#buildings#' <br>
    $BREAK ??!buildings
    <script>
//        debugger;
        function obj_click(a){
            alert(a);
            debugger;
            return 'aaa';
        }
        var roads = #buildings#;
        var overlays = {};
        for (el in roads) {
            if (el.length==0)   break;
            console.log('road el = '+el);
            var road = roads[el];
            console.log('begin el'+JSON.stringify(road));
            var lr=L.layerGroup();
            var descr  = road['descr'];
            var rname  = road['obj_name'];
            console.log('road descr'+rname);
            overlays[rname] = lr;
            var latlngs = JSON.parse(road['points']);
            var polyline = L.polygon(
                latlngs
            , {color: '#5f6e8d', weight:6}).addTo(lr);
            polyline.editing.enable();
            polyline.bindPopup(rname).on;
            polyline.on('edit', function() {
			console.log((typeof this)+' Polygon was edited!');
		});
            
            lr.addTo(mymap);
            polyline.on(
                 'click',
                 function(e) {
                    alert(polyline.getLatLngs());
                   L.DomEvent.stopPropagation(e);
                 });

        }

        L.control.layers({},overlays).addTo(mymap);
    </script>
    
[end]



[init poly]
[end]
[init resize]
  <script>
    document.onresize = function () {
        var w = screen.width;
        var h = screen.height;
        var dv = document.getElementById('mapid');
        console.log('mapid='+dv)
        dv.style.width = w*0.8+"px";
        dv.style.height = h*0.8+"px";
    }
</script>

[end]
[report]
    $LOG2 maps ========================<br>
        <input type=text id=coord value='' size=200 ><br>
        Наименование <input type=text id=objname value='' size=100 >
        <input type=button id=ClearBTN value='Очистить' onClick="
            oldcoord=$('##coord').val('');
        ">
        <input type=button id=SaveBTNe value='Сохранить аллею' onclick="
          AjaxCall('popupCont', 'c=maps/save_map_object&o_type=1&coord='+$('##coord').val()+'&objname='+$('##objname').val(), true);  
        "
        >
        <input type=button id=SaveBTNe value='Сохранить здание' onclick="
          AjaxCall('popupCont', 'c=maps/save_map_object&o_type=2&coord='+$('##coord').val()+'&objname='+$('##objname').val(), true);  
        "
        >

        <div id="mapid" style="width: 90%; height: 80%;"></div>
    <TABLE>
        <tr>
        <td>
        </td>

        <td>
          <li>
          </l>  
        </td>
    </table>
    $INCLUDE [init resize]
    $INCLUDE [init map]
    $INCLUDE [init layers]
    $INCLUDE [init roads]
    $INCLUDE [init buildings]
    $INCLUDE [init icon]

---------------ASDasd----------------------------


<script>
    var popup = L.popup();
    
    L.marker([56.7581634406245,37.211272716522224], {icon: gateIcon}).bindPopup("Проходная").addTo(mymap);


    function onMapClick(e) {
        navigator.clipboard.writeText(e.latlng.lat+','+e.latlng.lng);
//        L.circle(e.latlng, 1, {
//            color: 'green',
//            fillColor: '#f03',
//            fillOpacity: 0.1
//        }).addTo(mymap).bindPopup("Маркер.");
//
//        coord.push([e.latlng.lat,e.latlng.lng]);
//        console.log(JSON.stringify(coord));
//         popup
//             .setLatLng(e.latlng)
//             .setContent("You clicked the map at " + e.latlng.toString())
//             .openOn(mymap);
            var oldcoord=$('##coord').val();
            if (oldcoord.length>0){
                oldcoord = oldcoord+',';
            }
           $('##coord').val(oldcoord+'['+e.latlng.lat+','+e.latlng.lng+']');
    }

    mymap.on('click', onMapClick);

    </script>

[end]

// var markers = L.markerClusterGroup();
//    L.marker([56.75, 37.19]).addTo(mymap)
//        .bindPopup("<b>Hello world!<br />I am a popup.").openPopup();
//    L.circle([56.72, 37.19], 500, {
//        color: 'red',
//        fillColor: '#f03',
//        fillOpacity: 0.5
//    }).addTo(mymap).bindPopup("I am a circle.");

    var LeafIcon = L.Icon.extend({
        options: {
            ashadowUrl: 'leaf-shadow.png',
            iconSize:     [38, 45],
            shadowSize:   [20, 64],
            iconAnchor:   [20, 43],
            shadowAnchor: [4, 62],
            popupAnchor:  [-3, -36]
        }
    });

    var greenIcon = new LeafIcon({iconUrl: 'images/leaf-green.png'}),
        redIcon = new LeafIcon({iconUrl: 'images/leaf-red.png'}),
        orangeIcon = new LeafIcon({iconUrl: 'images/leaf-orange.png'}),
        gateIcon = new LeafIcon({iconUrl: 'images/JINR.png'});


[init icon]
<script>
    var LeafIcon = L.Icon.extend({
        options: {
            ashadowUrl: 'leaf-shadow.png',
            iconSize:     [38, 45],
            shadowSize:   [20, 64],
            iconAnchor:   [20, 43],
            shadowAnchor: [4, 62],
            popupAnchor:  [-3, -36]
        }
    });

    var greenIcon = new LeafIcon({iconUrl: 'images/leaf-green.png'}),
        redIcon = new LeafIcon({iconUrl: 'images/leaf-red.png'}),
        orangeIcon = new LeafIcon({iconUrl: 'images/leaf-orange.png'}),
        gateIcon = new LeafIcon({iconUrl: 'images/JINR.png'});
</script>

[end]
