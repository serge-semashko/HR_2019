[comments]
[end]

[description]
[end]
[parameters]
    LOG=ON
[end]

[init map]
    <script>
        var mbUrl ='https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';
        var mymap = L.map('mapid').setView([56.75859, 37.218719], 15);
        L.tileLayer(mbUrl,
            {
            maxZoom: 22,
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
                '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            id: 'mapbox/streets-v11'
        }).addTo(mymap);
        mymap.on('zoomend', function() {
            var dzoom =8-(( 22-mymap.getZoom())/1.3);
            if ( dzoom<=0) {dzoom=1};
            for (a in roads) {
                var obj=roads[a].leaflet_obj;
                obj.setStyle({weight:dzoom});
                console.log('dzoom='+dzoom)

            }

        });
    </script>

[end]

[init osmmap]
<script>
    osmUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
      osmAttribution = 'Map data <a target="_blank" href="http://www.openstreetmap.org">OpenStreetMap.org</a>' +
        ' contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
      osmLayer = new L.TileLayer(osmUrl, {
          maxZoom: 19,
          attribution: osmAttribution
        }),
//      weatherLayer = new OsmJs.Weather.LeafletLayer({
//          lang: 'ru'
//        }),
      baseMaps = {"OpenStreetMap": osmLayer},
//      overlayMaps = {"Метеоданные": weatherLayer},
//      layersControl = new L.Control.Layers(baseMaps, overlayMaps),
      layersControl = new L.Control.Layers(baseMaps),
      mymap = new L.Map('mapid', {
          center: new L.LatLng(56.75859, 37.218719),
          zoom: 15,
          layers: [osmLayer]
        }),
      popup = new L.Popup();
//    mymap.addControl(layersControl);
        mymap.on('zoomend', function() {
            var dzoom =8-(( 22-mymap.getZoom())/1.3);
            if ( dzoom<=0) {dzoom=1};
            for (a in roads) {
                var obj=roads[a].leaflet_obj;
                obj.setStyle({weight:dzoom});
                console.log('zoom='+mymap.getZoom()+' dzoom='+dzoom)

            }

        });

</script>
[end]


[init ymap]
<script>
    osmUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
      osmAttribution = 'Map data <a target="_blank" href="http://www.openstreetmap.org">OpenStreetMap.org</a>' +
        ' contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',

      osmLayer = L.tileLayer(
  'http://vec{s}.maps.yandex.net/tiles?l=map&v=4.55.2&z={z}&x={x}&y={y}&scale=2&lang=ru_RU', {
    subdomains: ['01', '02', '03', '04'],
    attribution: '<a http="yandex.ru" target="_blank">Яндекс</a>',
    reuseTiles: true,
    updateWhenIdle: false
  }
),
      baseMaps = {"OpenStreetMap": osmLayer},
      layersControl = new L.Control.Layers(baseMaps),
      mymap = new L.Map('mapid', {
          center: new L.LatLng(56.75859, 37.218719),
          zoom: 19,
          layers: [osmLayer]
        }),
      popup = new L.Popup();
    mymap.options.crs = L.CRS.EPSG3395;
    mymap.addControl(layersControl);
        mymap.on('zoomend', function() {
            var dzoom =8-(( 22-mymap.getZoom())/1.3);
            if ( dzoom<=0) {dzoom=1};
            for (a in roads) {
                var obj=roads[a].leaflet_obj;
                obj.setStyle({weight:dzoom});
                console.log('zoom='+mymap.getZoom()+' dzoom='+dzoom)

            }

        });

</script>
[end]




[56.75859, 37.218719], 15


[get roads]
    select CONCAT("'", id,  
        "T':{'descr':'",descr,
        "','obj_name':'",obj_name,
        "','points':'",points,
        "','o_type':'",o_type,
        "','map_object_type':'",map_object_type,
        "'},") as roads  from map_lhep  
        order by o_type, obj_name

[end]
[get map object types]
    select CONCAT("'", parm_name, 
        "':{'name':'",parm_name,
        "','val1':'",val1,
        "','val2':'",val2,
        "'},") as map_object_types from params where parm_type='map_object_type'
[end]


[js func]
    <script>
        function saveLeaf(leaf) {
                
                for (el in roads) {
                    rt = roads[el] ;
                    if (rt['_leaflet_id'] !=  leaf._leaflet_id) {
                        continue;
                    }
                    var a = leaf._latlngs;
//                    console.log('Нашел!!!');
                    var a = leaf.editing.latlngs[0];
                    var bb = rt['leaflet_obj'].getLatLngs();
                    if (bb.length==1) {a = bb[0]} else {a=bb};
                    var new_l=[];
                     console.log('a='+(typeof a)+' '+a);
                        for (i in a){
                            console.log('I='+(typeof i)+' '+i+' A='+(typeof a[i])+' '+a[i] );
                            var b = a[i];
                            var t = a[i];
                            var t1 = t['lat'];
                            var t2 = t['lng'];
                            new_l.push([t1,t2]);

                        }
                    var coord = JSON.stringify(new_l);
                    console.log(coord);
                    console.log('ID= '+this._leaflet_id);
                    var aa = leaf._latlngs;
                    if ( coord.indexOf("null") >= 0 ){
                        debugger;
                        aaa();
                    }
                    if ( coord.length <20 ){
                        debugger;
                        alert('Ошибка поиска объекта');
                        aaa();
                    }

                    AjaxCall('popupCont', 'c=maps/save_map_object&o_type='+rt['o_type']+'&coord='+coord+'&objname='+el, true);  

                    break;

                }
        }

    </script>


[end]


                'enable_editing(false);'+
                ' obj=roads[this.id].leaflet_obj;'+
                'console.log(this.id+\'=\'+obj);'+
                ' obj.editing.enable();'+



[init roads]
    $GET_DATA [get roads]
    $LOG2 roads #roads# <br>
    $GET_DATA [get map object types]
    $SET_PARAMETERS roads={#roads#}
    $SET_PARAMETERS map_object_types={#map_object_types#}
    $LOG2 roads #roads# <br>
    $LOG2 map_opbect_types #map_object_types# <br>
    $BREAK ??!roads

   <br> init roads  <br> 

    <script>
            function newMapObject(obj_name,o_type,map_object_type, coord){
                    AjaxCall('popupCont', 'c=maps/save_map_object&op=new&id=new&map_object_type='+map_object_type+'&o_type='+o_type+'&coord='+coord+'&objname='+obj_name, true);  
            };
            function saveAll(){
                for (el in roads) {
                    rt = roads[el] ;
                    cur_object = rt.leaflet_obj;
                    console.log('id='+el+' '+rt+' '+toString.call(cur_object));
                    var a = cur_object._latlngs;
                    var a = cur_object.editing.latlngs[0];
                    var bb = rt['leaflet_obj'].getLatLngs();
                    if (bb.length==1) {a = bb[0]} else {a=bb};
                    var new_l=[];
                     console.log('a='+(typeof a)+' '+a);
                        for (i in a){
                            console.log('I='+(typeof i)+' '+i+' A='+(typeof a[i])+' '+a[i] );
                            var b = a[i];
                            var t = a[i];
                            var t1 = t['lat'];
                            var t2 = t['lng'];
                            new_l.push([t1,t2]);

                        }
                    var coord = JSON.stringify(new_l);
                    console.log(coord);
                    console.log('ID= '+cur_object._leaflet_id);
                    var aa = cur_object._latlngs;
                    if ( coord.indexOf("null") >= 0 ){
                        debugger;
                        aaa();
                    }
                    if ( coord.length <20 ){
                        debugger;
                        alert('Ошибка поиска объекта');
                        aaa();
                    }
                    el = el.replace('T','');

                    AjaxCall('popupCont', 'c=maps/save_map_object&op=opd&id='+el+'&map_object_type='+rt.map_object_type+'&o_type='+rt['o_type']+'&coord='+coord+'&objname='+rt.obj_name, true);  
                }
                    
            };



        function redraw_poly(){
            
            $.each($.find("select.bld_desc"), function () {
                var optionSelected = this.selectedIndex; 
                var b_idr = this.id;
                if (b_idr === 'bld_sel_num')
                    {
                        return;
                     };
                
                var objnum = b_idr.split('_')[1].trim();
                console.log(b_idr+' on '+this.style.color);
                var b_color = this.options[optionSelected].style.color;
                var b_value = this.options[optionSelected].value;
                console.log('set color '+b_color+' val='+b_value);
                this.style.color= b_color;
                var b_idr = this.id;
                b_obj = roads[objnum];
                b_obj.map_object_type = b_value;
                obj = b_obj.leaflet_obj;
                obj.setStyle({fillOpacity:0.70,color:this.style.color});


//                debugger;
                
                console.log(b_idr+' off '+(toString(obj))+' '+this.style.color);
                
                

            });
        };
        var editing_id = '--';
        var selbtype ='#selbtype#';
        var roads = #roads#;
        var map_object_types = #map_object_types#;
        console.log('map_object_types =  '+JSON.stringify(map_object_types));
        var overlays = {};
        function enable_editing(mode){
            for (a in roads) {
                var obj=roads[a].leaflet_obj;
                if ( mode ) {
                        obj.editing.enable();}
                    else {
                        obj.editing.disable();
                    }

            }

        }
        function beginEditObject(this_el){
                enable_editing(false);
                obj=roads[this_el.id].leaflet_obj;
                console.log(this_el.id+'='+obj);
                obj.editing.enable();
                $('##objname').val(roads[this_el.id].obj_name);
                $('##edit_controls').show();
        }
        function deleteMapObject(id){
                enable_editing(false);
                id = id.replace('T','');
                AjaxCall('popupCont', 'c=maps/save_map_object&op=del&id='+id, true);  

        }


        function leafBlink(idobj,cbid,stcolor){
                var blinked = $('#'+cbid).prop('checked');
                console.log('blink '+idobj+' '+blinked+' '+stcolor);
                obj = roads[idobj];
                if (!blinked){
//                    console.log('fin '+start_color);
                    obj.leaflet_obj.setStyle({fillOpacity:0.70});
                    obj.leaflet_obj.setStyle({color:stcolor});
                    return;
                };
                var opa=Math.abs(1-obj.leaflet_obj.options.fillOpacity);
                if (obj.leaflet_obj.options.color !== stcolor ){
                    
                    obj.leaflet_obj.setStyle({color:stcolor});
                } else {
                    
                    obj.leaflet_obj.setStyle({fillOpacity:0.70,color:"#00FFFF"});
                }
                var opc=Math.abs(0xFFFFFF-obj.leaflet_obj.options.color);
                console.log('Blink opa '+opa+' color='+opc+' '+obj.leaflet_obj.options.color);
                setTimeout(leafBlink,200,idobj,cbid,stcolor);

        }
        var ovrls = [{},{},{}];
        function add_object(el,obj){
            var road = roads[el];
            var lr=L.layerGroup();
            var descr  = road['descr'];
            if (road['o_type'] == 1) {
                    var rname  = 'Аллея '+road['obj_name'];
                } else {
                    var rname  = 'корпус '+road['obj_name'];
                }
            console.log('el='+el+' road descr'+rname);
            ovrls[road['o_type']][rname] = lr;
            var latlngs = JSON.parse(road['points']);
            var obj_desc = map_object_types[road.map_object_type];
            console.log('Add el='+el+' begin el'+JSON.stringify(road)+' obj_type='+road.map_object_type+' color='+obj_desc.val2);
            var obj_color=obj_desc.val2;

            if (road['o_type'] == 1) {
                var polyline = L.polyline(
                    latlngs
                , {color: '##'+obj_color, weight:4}).addTo(lr);
                } else {
                    var polyline = L.polygon(
                        latlngs
                    , {color:'##'+ obj_color, weight:4}).addTo(lr);
                }
            polyline.bindPopup(rname).on;
            road['_leaflet_id'] = polyline._leaflet_id;
            road['leaflet_obj'] = polyline;
            console.log('1Create line ID= '+polyline._leaflet_id);
            polyline.on('edit', function() {
                
                for (el in roads) {
                    rt = roads[el] ;
                    if (rt['_leaflet_id'] !=  this._leaflet_id) {
                        continue;
                    }
                    var a = this._latlngs;
//                    console.log('Нашел!!!');
                    var a = this.editing.latlngs[0];
                    var bb = rt['leaflet_obj'].getLatLngs();
                    if (bb.length==1) {a = bb[0]} else {a=bb};
                    var new_l=[];
                     console.log('a='+(typeof a)+' '+a);
                        for (i in a){
                            console.log('I='+(typeof i)+' '+i+' A='+(typeof a[i])+' '+a[i] );
                            var b = a[i];
                            var t = a[i];
                            var t1 = t['lat'];
                            var t2 = t['lng'];
                            new_l.push([t1,t2]);

                        }
                    var coord = JSON.stringify(new_l);
                    console.log(coord);
                    console.log('ID= '+this._leaflet_id);
                    var aa = this._latlngs;
                    if ( coord.indexOf("null") >= 0 ){
                        debugger;
                        aaa();
                    }
                    if ( coord.length <20 ){
                        debugger;
                        alert('Ошибка поиска объекта');
                        aaa();
                    }

                    AjaxCall('popupCont', 'c=maps/save_map_object&o_type='+rt['o_type']+'&coord='+coord+'&objname='+el, true);  

                    break;

                }
                    
            });

            lr.addTo(mymap);
            var tbl= $('##table_bld')[0];
//            var tbl= document.getElementById('table_bld');
            var row=tbl.insertRow( -1);
            var c1 = row.insertCell();
            c1.innerHTML  = '<input  id='+el+' type=button value="..." onclick="'+
                ' editing_id=this.id; beginEditObject(this);                 '+
            '">';
            var c1 = row.insertCell();

            c1.innerHTML  = selbtype.replace('sel_num',el);
            
            c2 = document.getElementById('bld_'+el.trim());
            var optionSelected = c2.selectedIndex; 
            c2.value = road.map_object_type;
            
            var c1 = row.insertCell();
            c1.innerHTML = '<input type="checkbox" idobj='+el+' id=blink'+el+' onclick="'+
                '  cb = $(this);'+
                'var blinked = cb.prop(\'checked\');'+
                'var idobj = cb.attr(\'idobj\');'+
                ' console.log(idobj+\' \'+blinked);'+
                ' var obj=roads[idobj];'+
                ' var obj1=obj.leaflet_obj;'+
                ' var obj2=obj1.options;'+
                ' var stcolor=obj.leaflet_obj.options.color;'+
                ' console.log(obj+obj1+obj2+\' Start blink\'+idobj+\' \'+blinked+\' \'+stcolor);'+
                'if (blinked){setTimeout(leafBlink,200,idobj,\'blink\'+idobj, stcolor)};'+
                ' '+

            '">';
            var c1 = row.insertCell()
            c1.innerHTML = rname;

            var c1 = row.insertCell();
            c1.innerHTML  = '<input  id='+el+' type=button value="Del" onclick="'+
                ' editing_id=this.id; deleteMapObject(editing_id);document.theForm.c.value=\'maps/maps_lhep.cfg\'; AjaxCall(\'content_table\',\'\', true, \'theForm\');   '+
            '">';

            polyline.on(
                 'click',
                 function(e) {
                   L.DomEvent.stopPropagation(e);
                 });
        }
        function obj_click(a){
        }
        for (el in roads) {
            if (el.length==0)   break;
            console.log('===================== el = '+el);
            var road = roads[el];
            console.log(el+' = '+JSON.stringify(road));
            add_object(el, road);

        }
        redraw_poly();
        

//        L.control.layers({},ovrls[1]).addTo(mymap);
//        L.control.layers({},ovrls[2]).addTo(mymap);
    </script>
    
[end]





[init poly]
[end]
[init resize]
  <script>
    document.onresize = function () {
        var w = screen.width;
        var h = screen.height;
        var dv = document.getElementById('mapid');
        console.log('mapid='+dv)
        dv.style.width = w*0.8+"px";
        dv.style.height = h*0.8+"px";
    }
</script>

[end]
[get b_types]
    select  concat(' <option value="', trim(parm_name), '"  style=" color:' ,p.val2,'"',
     '>' , TRIM(p.val1), '</option> ') as btypes
    from params p
    WHERE p.parm_type = 'map_object_type'
    order BY p.val1
[end]
[report]
    $GET_DATA [get b_types]
    $LOG2 b_types = #btypes# <br>
    $SET_PARAMETERS selbtype=<select id=bld_sel_num class=bld_desc  onchange="redraw_poly()">  #btypes#  </select>
    $LOG2 maps ========================<br>
        <input class=blinking id=modebox type="checkbox" name=mode value='view'
            style="display:none" 
??!USER_ID=3663&!USER_ID=9056&!USER_ID=3305
        onClick="
            cb = $(this);
            var editMode = cb.prop('checked');
            for (a in roads) {
                var obj=roads[a].leaflet_obj;
                if ( editMode ) {
                        obj.editing.enable();}
                    else {
                        obj.editing.disable();
                    }

            }
            if ( editMode ) {
//                $('##coord').show();
//                $('##SaveBTN_a').show();
//                $('##objname').show();
//                $('##ClearBTN').show();
//                $('##SaveBTN_b').show();
                $('##edit_controls').show();
            } else {
//                $('##coord').attr('disabled','disabled');
//                $('##SaveBTN_a').hide();
//                $('##SaveBTN_b').hide();
//                $('##ClearBTN').hide();
//                $('##objname').hide();
//                $('##coord').hide();
                $('##edit_controls').hide();
                
            }
        "
        >
          <b
                      style="display:none" ??!USER_ID=3663&!USER_ID=9056&!USER_ID=3305
            >
              Режим редактирования ??
<style>

.blink {
    animation: blink 2s infinite; /* Параметры анимации */
   }
   @keyframes blink {
    from { opacity: 1; /* Непрозрачный текст */ }
    to { opacity: 0; /* Прозрачный текст */ }
   }}
</style>


              <input  type=button value=Save  onclick="
                    saveAll();
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

                      " 
            >

              <input  type=button value="Новая линия"  onclick="
                    newMapObject('НОВАЯ ЛИНИЯ',1,'b_roads', '[[56.75823695642427,37.21160531044007],[56.75840457190959,37.21175819635392],[56.75827224395704,37.212002277374275]]');
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

                      " 
                >
              <input  type=button value="Новое здание линия"  onclick="
                    newMapObject('НОВОЕ ЗДАНИЕ',2,'b_admin', '[[56.75823695642427,37.21160531044007],[56.75840457190959,37.21175819635392],[56.75827224395704,37.212002277374275]]');
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

                      " 
                >



<br>

          </b>
<div id=edit_controls style="display:none">
        </input>
    
        <input type=text id=coord value='' size=200 disabled  ><br>
        <b id=objlbl    >Наименование</b> 
        <input type=text id=objname value='' size=100   >
        <input type=button id=ClearBTN value='Очистить'   onClick=" 
            oldcoord=$('##coord').val('');
        ">
        <input type=button id=SaveBTN_a value='Сохранить'    onclick="
          console.log(editing_id);
          roads[editing_id].obj_name=$('##objname').val();
                    saveAll();
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

        "
        >
</div>
    <div>
        <div id="mapid" style="width: 70%; height: 80%;float:left"></div>
        <div id="listid" style="width: 30%; height: 80%;float:right">
         <table id=table_bld border=1>
         </table>
         <table id=table_roads border=1>
         </table>
        </div>
    </div> 
    $INCLUDE [js func]
    $INCLUDE [init resize]
    $INCLUDE [init osmmap]
    $INCLUDE [init roads]
    $INCLUDE [init icon]

<script>
    var popup = L.popup();
    
    L.marker([56.7581634406245,37.211272716522224], {icon: gateIcon}).bindPopup("Проходная").addTo(mymap);


    function onMapClick(e) {
        navigator.clipboard.writeText(e.latlng.lat+','+e.latlng.lng);
            var oldcoord=$('##coord').val();
            if (oldcoord.length>0){
                oldcoord = oldcoord+',';
            }
           $('##coord').val(oldcoord+'['+e.latlng.lat+','+e.latlng.lng+']');
    }

    mymap.on('click', onMapClick);

    </script>

[end]

// var markers = L.markerClusterGroup();
//    L.marker([56.75, 37.19]).addTo(mymap)
//        .bindPopup("<b>Hello world!<br />I am a popup.").openPopup();
//    L.circle([56.72, 37.19], 500, {
//        color: 'red',
//        fillColor: '#f03',
//        fillOpacity: 0.5
//    }).addTo(mymap).bindPopup("I am a circle.");

    var LeafIcon = L.Icon.extend({
        options: {
            ashadowUrl: 'leaf-shadow.png',
            iconSize:     [38, 45],
            shadowSize:   [20, 64],
            iconAnchor:   [20, 43],
            shadowAnchor: [4, 62],
            popupAnchor:  [-3, -36]
        }
    });

    var greenIcon = new LeafIcon({iconUrl: 'images/leaf-green.png'}),
        redIcon = new LeafIcon({iconUrl: 'images/leaf-red.png'}),
        orangeIcon = new LeafIcon({iconUrl: 'images/leaf-orange.png'}),
        gateIcon = new LeafIcon({iconUrl: 'images/JINR.png'});


[init icon]
<script>
    var LeafIcon = L.Icon.extend({
        options: {
            ashadowUrl: 'leaf-shadow.png',
            iconSize:     [38, 45],
            shadowSize:   [20, 64],
            iconAnchor:   [20, 43],
            shadowAnchor: [4, 62],
            popupAnchor:  [-3, -36]
        }
    });

    var greenIcon = new LeafIcon({iconUrl: 'images/leaf-green.png'}),
        redIcon = new LeafIcon({iconUrl: 'images/leaf-red.png'}),
        orangeIcon = new LeafIcon({iconUrl: 'images/leaf-orange.png'}),
        gateIcon = new LeafIcon({iconUrl: 'images/JINR.png'});
</script>

[end]
